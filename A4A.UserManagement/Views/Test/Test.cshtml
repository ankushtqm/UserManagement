@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow"> 
    <script type="text/javascript" src="/js/lib/dummy.js"></script> 
    <link rel="stylesheet" type="text/css" href="/css/result-light.css"> 
    <style type="text/css"> 
    </style> 
    <title></title> 
    <script type='text/javascript'>
//<![CDATA[
//window.onload=function(){
//ko.observableArray.fn.sortBy = function(fld, direction)
//{
//    var isDesc = direction && direction.toLowerCase() == 'desc';

//    return ko.observableArray(this.sort(function (a, b) {
//        a = ko.unwrap(a[fld]);
//        b = ko.unwrap(b[fld]);

//        return (a == b ? 0 : a < b ? -1 : 1) * (isDesc ? -1 : 1);
//        }));
        //};

window.onload=function(){
ko.observableArray.fn.sortBy = function (fld, direction) {
            var isDesc = direction && direction.toLowerCase() == 'desc';
            alert("In Sort");
            return ko.observableArray(this.sort(function (a, b) {
                a = ko.unwrap(a[fld]);
                alert("a: " + a);
                b = ko.unwrap(b[fld]);
                alert("b: " + b);
                return (a == b ? 0 : a < b ? -1 : 1) * (isDesc ? -1 : 1);
            }));
};

function ViewModel() {
    var self = this;
    self.data = ko.observableArray([
    
   
    { name: "George", type: "Hippo" },
    { name: "Nungle", type: "Bear" },
     { name: "Boogle", type: "Bear" },
    { name: "Zippy", type: "Unknown" }
        ])
    
    self.x = ko.observableArray();
    self.toadd = ko.observable();
    self.add = function () {
        alert("In add");
        self.data.push({ name: self.toadd(), type: self.toadd() });
    }
}



ko.applyBindings(new ViewModel());
}//]]>

    </script>


</head>

<body>
    <script type="text/javascript" src="http://knockoutjs.com/downloads/knockout-3.2.0.js"></script>
    <p>
        Data count = <span data-bind='text: data().length' />
        </p>
            <input data-bind="value:toadd" />
            <button typ="button" data-bind="click:add">Add</button>

            <div data-bind="foreach: data().sort(function(l,r) { return l.name == r.name ? 0 : (l.name > r.name ? -1 : 1)}) "> @*.sortBy('type', 'asc').sortBy('name','desc')   .sort(function(l,r) { return l.Name == r.Name ? 0 : (l.Name < r.Name ? -1 : 1)})*@
                
                <span data-bind="text: name"></span>
                <span data-bind="text: type"></span>
                <hr />
            </div>
</body>

</html>

